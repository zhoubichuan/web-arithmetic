(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{533:function(t,s,a){"use strict";a.r(s);var n=a(18),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"算法复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法复杂度"}},[t._v("#")]),t._v(" 算法复杂度")]),t._v(" "),a("ul",[a("li",[t._v("算法的复杂度分为时间复杂度和空间复杂度\n"),a("ul",[a("li",[t._v("作用：计算机资源最重要的就是时间和空间（寄存器资源）；时间复杂度是指执行算法所需要的计算工作量；而空间复杂度是指执行这个算法时计算机所需资源的多少，因此复杂度分为时间复杂度和空间复杂度；简单来说，时间复杂度指的是语句执行次数，空间复杂度指的是算法所占的存储空间。")])])])]),t._v(" "),a("h2",{attrs:{id:"_1-时间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-时间复杂度"}},[t._v("#")]),t._v(" 1.时间复杂度")]),t._v(" "),a("ul",[a("li",[t._v("计算时间复杂度的方法：\n"),a("ul",[a("li",[t._v("1.用常数 1 代替运行时间中的所有加法常数")]),t._v(" "),a("li",[t._v("2.修改后的运行次数函数中，只保留最高阶项")])]),t._v(" "),a("ul",[a("li",[t._v("3.去除最高阶项的系数")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("按数量级递增排列，常见的时间复杂度有：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("O(1)")]),t._v(": Constant Complexity: Constant 常数复杂度")]),t._v(" "),a("li",[a("code",[t._v("O(log n)")]),t._v(": Logarithmic Complexity: 对数复杂度")]),t._v(" "),a("li",[a("code",[t._v("O(n)")]),t._v(": Linear Complexity: 线性时间复杂度")]),t._v(" "),a("li",[a("code",[t._v("O(n^2)")]),t._v(": N square Complexity 平⽅方")]),t._v(" "),a("li",[a("code",[t._v("O(n^3)")]),t._v(": N square Complexity ⽴立⽅方")]),t._v(" "),a("li",[a("code",[t._v("O(2^n)")]),t._v(": Exponential Growth 指数")]),t._v(" "),a("li",[a("code",[t._v("O(n!)")]),t._v(": Factorial 阶乘")])])]),t._v(" "),a("li",[a("p",[t._v("随着问题规模 n 的不断增大，上述时间复杂度不断增大，算法的执行效率越低")])]),t._v(" "),a("li",[a("p",[t._v("eg：时间复杂度 O(1)")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("eg:时间复杂度 O(n)")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("eg:时间复杂度 O(n^2)")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运行次数为(1+n)*n/2--\x3en^2(只保留高阶项，去掉高阶项系数)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("blockquote",[a("p",[t._v("最坏时间复杂度和平均时间复杂度")])]),t._v(" "),a("ul",[a("li",[t._v("最坏情况下时间复杂度")]),t._v(" "),a("li",[t._v("平均时间复杂度是指可能输入实列均以等概率的情况下，算法的期望运行时间")])]),t._v(" "),a("blockquote",[a("p",[t._v("常用排序算法的时间复杂度")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("算法")]),t._v(" "),a("th",[t._v("最差时间复杂度")]),t._v(" "),a("th",[t._v("平均时间复杂度")]),t._v(" "),a("th",[t._v("稳定性")]),t._v(" "),a("th",[t._v("空间复杂度")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("冒泡排序")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("稳定")]),t._v(" "),a("td",[t._v("O(1)")])]),t._v(" "),a("tr",[a("td",[t._v("快速排序")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("O(n*log2n)")]),t._v(" "),a("td",[t._v("不稳定")]),t._v(" "),a("td",[t._v("O(log2n)~O(n)")])]),t._v(" "),a("tr",[a("td",[t._v("选择排序")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("稳定")]),t._v(" "),a("td",[t._v("O(1)")])]),t._v(" "),a("tr",[a("td",[t._v("二叉树排序")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("O(n*log2n)")]),t._v(" "),a("td",[t._v("不稳定")]),t._v(" "),a("td",[t._v("O(1)")])]),t._v(" "),a("tr",[a("td",[t._v("插入排序")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("O(n2)")]),t._v(" "),a("td",[t._v("稳定")]),t._v(" "),a("td",[t._v("O(1)")])]),t._v(" "),a("tr",[a("td",[t._v("堆排序")]),t._v(" "),a("td",[t._v("O(n*log2n)")]),t._v(" "),a("td",[t._v("O(n*log2n)")]),t._v(" "),a("td",[t._v("不稳定")]),t._v(" "),a("td",[t._v("O(1)")])]),t._v(" "),a("tr",[a("td",[t._v("希尔排序")]),t._v(" "),a("td",[t._v("O")]),t._v(" "),a("td",[t._v("O")]),t._v(" "),a("td",[t._v("不稳定")]),t._v(" "),a("td",[t._v("O(1)")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-空间复杂度"}},[t._v("#")]),t._v(" 2.空间复杂度")]),t._v(" "),a("ul",[a("li",[t._v("空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，记做 S(n)=O(f(n))")])]),t._v(" "),a("ul",[a("li",[t._v("对于一个算法来说，空间复杂度和时间复杂度往往是相互影响的。当追求一个较好的时间复杂度时，可能会使空间复杂度的性能变差，即可能导致占用较多的存储空间，反之，当追求一个较好的空间复杂度时，可能会使时间复杂度的性能变差，即可能导致占用较长的运行时间。")]),t._v(" "),a("li",[t._v("有时我们可以用空间来换取时间达到目的。")])]),t._v(" "),a("h2",{attrs:{id:"_3-前端算法场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-前端算法场景"}},[t._v("#")]),t._v(" 3.前端算法场景")]),t._v(" "),a("ul",[a("li",[t._v("rollup 使用 tree-shaking 算法，检测用不到的代码，减小包的大小")])]),t._v(" "),a("ul",[a("li",[t._v("树（DOM-DIFF）算法")]),t._v(" "),a("li",[t._v("队列和调度算法（React Fiber）")]),t._v(" "),a("li",[t._v("图论（Webpack split chunk plugin 的计算）")]),t._v(" "),a("li",[t._v("图形算法：svg 和 canvas 绘图底层的算法，衍生出 d3.js,highcharts,echarts,canvas.js 等等一些图标库；以及构成 html 中渲染的基础；")]),t._v(" "),a("li",[t._v("数据可视化算法")]),t._v(" "),a("li",[t._v("3D 相关算法\n"),a("ul",[a("li",[t._v("normanvr:用 vr 控制 web3d 动画")]),t._v(" "),a("li",[t._v("three.js 控制的地球 3d 模型")])])])])])}),[],!1,null,null,null);s.default=v.exports}}]);